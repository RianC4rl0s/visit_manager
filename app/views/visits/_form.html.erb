<%= form_with(model: visit) do |form| %>
  <% if visit.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(visit.errors.count, "error") %> prohibited this visit from being saved:</h2>
      <ul>
        <% visit.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div>
    <%= form.label :visit_date, style: "display: block" %>
    <%= form.datetime_field :visit_date %>
  </div>

  <%# <div class="form-group"> %>
  <%#= form.label :visitor_id, 'Selecione um Visitante' %>
  <%#= form.collection_select :visitor_id, Visitor.all, :id, :name, { prompt: 'Escolha um Visitante' }, class: 'form-control' %>
  <%# </div> %>
 
  <!-- Campos ocultos para armazenar os dados do visitante -->
  <div style="display: none;">
    <%= form.hidden_field :visitor_id %>
    
  </div>
  <%# <div> %>
  <%#= form.label :sector_id, style: "display: block" %>
  <%#= form.text_field :sector_id %>
  <%# </div> %>
  
  <div>
    <%= form.label :visitor_cpf, "CPF do Visitante", style: "display: block" %>
    <%= form.text_field :visitor_cpf %>
    <button id="check-visitor" type="button" class="btn btn-primary"><i class="bi bi-search "></i></button>
  </div>
  <div>
    <%= form.label :visitor_name, "Nome do Visitante", style: "display: block" %>
    <%= form.text_field :visitor_name %>
  </div>
  <div>
    <%= form.label :visitor_rg, "RG do Visitante", style: "display: block" %>
    <%= form.text_field :visitor_rg %>
  </div>
  <div>
    <%= form.label :visitor_telefone, "Telefone do Visitante", style: "display: block" %>
    <%= form.text_field :visitor_telefone %>
  </div>
  <div>
    <%#= form.label :visitor_foto, "Foto do Visitante", style: "display: block" %>
    <%#= form.text_area :visitor_foto %>
  </div>
  <div class="field">
    <%#= form.label :foto %>
    <%= form.file_field :foto,style: "display:none;", id: "webcam_photo_field" %>
  </div>
  <video id="webcam" width="320" height="240" autoplay playsinline></video>
  <canvas id="canvas" width="320" height="240"></canvas>
  <!-- Botão para capturar a imagem -->
  <button id="captureButton" type="button" class="btn btn-primary">Capturar Imagem</button>
  <div class="form-group">
    <%= form.label :sector_id, 'Selecione um Setor' %>
    <%= form.collection_select :sector_id, Sector.all, :id, :name, { prompt: 'Escolha um Setor' }, class: 'form-control' %>
  </div>
  <div>
    <%= form.submit class:"btn btn-success"%>
  </div>
  <script>
    $(document).ready(function() {
      $('#check-visitor').click(function() {
        var visitorCpf = $('#visit_visitor_cpf').val();
        if (visitorCpf) {
          // Faça uma chamada AJAX para verificar se o visitante existe no servidor
          $.ajax({
            url: '/visitors/check_visitor',
            method: 'GET',
            data: { cpf: visitorCpf },
            success: function(data) {
              if (data.visitor) {
                // Preencha os campos do visitante automaticamente
                $('#visit_visitor_id').val(data.visitor.id);
                $('#visit_visitor_name').val(data.visitor.name);
                $('#visit_visitor_rg').val(data.visitor.rg);
                $('#visit_visitor_telefone').val(data.visitor.telefone);
                $('#visit_visitor_foto').val(data.visitor.foto);
                // Preencha outros campos do visitante, se necessário
                // alert('Visitante encontrado e preenchido automaticamente.');
              } else {
                // Se o visitante não for encontrado, deixe o usuário preencher manualmente
                alert('Visitante não encontrado. Preencha os campos manualmente.');
              }
            },
            error: function() {
              alert('Erro ao verificar o visitante.');
            }
          });
        } else {
          alert('Por favor, insira um CPF válido.');
        }
      });
    });
    document.addEventListener("DOMContentLoaded", function () {
            var videoElement = document.getElementById("webcam");
            var canvasElement = document.getElementById("canvas");
            var captureButton = document.getElementById("captureButton");
            var webcamPhotoField = document.getElementById("webcam_photo_field");
            if (videoElement && canvasElement && captureButton) {
                // Acesso à webcam
                navigator.mediaDevices
                    .getUserMedia({ video: true })
                    .then(function (stream) {
                        // Associar o stream da webcam ao elemento <video>
                        videoElement.srcObject = stream;
                    })
                    .catch(function (error) {
                        console.error("Erro ao acessar a webcam: ", error);
                    });

                // Capturar a imagem quando o botão for clicado
                captureButton.addEventListener("click", function () {
                    var context = canvasElement.getContext("2d");
                    context.drawImage(videoElement, 0, 0, canvasElement.width, canvasElement.height);

                    canvasElement.toBlob(function (blob) {
                    var file = new File([blob], "webcam_photo.jpg", { type: "image/jpeg" });

                    // Preencher o campo de arquivo oculto com a imagem
                    // webcamPhotoField.files = [file];
                    var fileList = new DataTransfer();
                    fileList.items.add(file);

            // Atribuir a lista de arquivos falsos ao campo de arquivo
                    webcamPhotoField.files = fileList.files;
                    }, "image/jpeg");
                    // Agora, você pode usar o contexto do canvas para manipular a imagem capturada
                });
            }
        });
    document.addEventListener("visibilitychange", function () {
    if (document.visibilityState === "hidden") {
        // Página ficou invisível (usuário saiu da tela)
        stopCameraStream();
    } else if (document.visibilityState === "visible") {
        // Página ficou visível novamente (usuário voltou à tela)
        startCameraStream();
    }
    });

    function startCameraStream() {
    navigator.mediaDevices
        .getUserMedia({ video: true })
        .then(function (stream) {
            // Associar o stream da webcam ao elemento <video>
            videoElement.srcObject = stream;
        })
        .catch(function (error) {
            console.error("Erro ao acessar a webcam: ", error);
        });
    }

    function stopCameraStream() {
    if (videoElement.srcObject) {
        var tracks = videoElement.srcObject.getTracks();
        tracks.forEach(function (track) {
            track.stop();
        });
        videoElement.srcObject = null;
    }
    }
  </script>
<% end %>
